#!/bin/bash

function wait_for_ssh {
	HOST_STRING="$1"
	REVERSE=0
	[ "$2" ] && REVERSE=1

	# wait loop
	set +e
	CONTINUE=1
	while [ $CONTINUE -eq 1 ]; do
		ssh -o StrictHostKeyChecking=no -o ConnectTimeout=600 -o ConnectionAttempts=1000 "$HOST_STRING" -- hostname
		RETVAL=$?
		[ ! "$RETVAR" ] && RETVAR=0

		if [ $REVERSE -eq 0 -a $RETVAR -eq 0 ]; then
			CONTINUE=0
		elif [ $REVERSE -eq 0 -a $RETVAR -ne 0 ]; then
			CONTINUE=1
		elif [ $REVERSE -eq 1 -a $RETVAR -eq 0 ]; then
			CONTINUE=1
		else
			CONTINUE=0
		fi

		[ $CONTINUE -ne 0 ] && sleep 1
	done
	set -e
}


set -x
set -e

if [ -z "$1" ]; then
	echo "Missing CMD parameter."
	echo
	echo "Examples:"
	echo "  ./ttvagrant setup tttest66 develop"
	echo "  ./ttvagrant ip tttest66"
	echo "  ./ttvagrant update tttest66 develop"
	echo "  ./ttvagrant destroy tttest66"
	echo "  ./ttvagrant ssh tttest66"
	echo "  ./ttvagrant list"
	exit 1
fi

CMD="$1"

# list
if [ "$CMD" != "list" ]; then
	if [ -z "$2" ]; then
		echo "Missing TTSERVER_PREFIX parameter."
		exit 1
	fi
fi

if [ "$CMD" != "list" -a "$CMD" != "setup" -a "$CMD" != "update" -a "$CMD" != "ssh" -a "$CMD" != "ip" -a "$CMD" != "destroy" ]; then
	echo "Unknown command '$CMD'."
	exit 1
fi

TTSERVER_PREFIX="$2"

# setup/update
if [ "$CMD" == "setup" -o "$CMD" == "update" ]; then
	if [ -z "$3" ]; then
		echo "Missing TTSERVER_BRANCH parameter."
		exit 1
	fi
	TTSERVER_BRANCH="$3"

	if [ -z "$4" ]; then
		echo "Settign TTSERVER_PORT to default value 2101."
		TTSERVER_PORT="2101"
	else
		TTSERVER_PORT="$4"
	fi

fi

if [ -z "$VAGRANT_DIR" ]; then
	VAGRANT_DIR=/home/vagrant/taptinder-testing/fedora-21
fi

SRC_DIR=`pwd`
cd $VAGRANT_DIR

if [ "$CMD" == "list" ]; then
	ls -1
	exit 0
fi

HOST_NAME="server-$TTSERVER_PREFIX.taptinder.org"

if [ "$CMD" == "ssh" ]; then
	cd $HOST_NAME/
	#vagrant ssh $HOST_NAME -- -tt -l root
	ssh -oStrictHostKeyChecking=no root@$HOST_NAME
	exit 0
fi

if [ "$CMD" == "ip" ]; then
	cd $HOST_NAME/
	#vagrant ssh $HOST_NAME -- -tt -l root
	ssh -t -oStrictHostKeyChecking=no root@$HOST_NAME -- $'ip -f inet -o addr | perl -ne \'/eth\d+\s+inet\s+(\d+\.\d+\.\d+\.\d+)/; print "$1\n"\''
	exit 0
fi


if [ "$CMD" == "destroy" ]; then
	cd $HOST_NAME/
	vagrant destroy
	cd ..
	rm -rf $HOST_NAME
	exit 0
fi

if [ "$CMD" == "setup" ]; then
	mkdir $HOST_NAME
	cd $HOST_NAME/
	ln -s $VAGRANT_DIR/Vagrantfile .
	ls -al

	vagrant up

	wait_for_ssh "root@$HOST_NAME"

	# todo
	sleep 3
else
	cd $HOST_NAME/
fi


# Update scripts
rsync -ave "ssh -o StrictHostKeyChecking=no" $SRC_DIR/setup-ttserver-p*.sh root@$HOST_NAME:/root/


if [ "$CMD" == "setup" ]; then
	ssh -oStrictHostKeyChecking=no root@$HOST_NAME -- /root/setup-ttserver-pr1.sh $TTSERVER_BRANCH $TTSERVER_PREFIX $TTSERVER_PORT

	# shutdown -r now
	ssh -oStrictHostKeyChecking=no root@$HOST_NAME -- shutdown -r now || :

	# todo
	sleep 10
	#wait_for_ssh "root@$HOST_NAME" reverse

	wait_for_ssh "root@$HOST_NAME"

	ssh -t -oStrictHostKeyChecking=no root@$HOST_NAME -- /root/setup-ttserver-pr2.sh $TTSERVER_BRANCH $TTSERVER_PREFIX $TTSERVER_PORT
fi

REM_CMD="$CMD"
ssh -t -oStrictHostKeyChecking=no root@$HOST_NAME -- "cp /root/setup-ttserver-pu1.sh /home/ttuh/setup-ttserver-pu1.sh ; chown ttuh /home/ttuh/setup-ttserver-pu1.sh"
ssh -t -oStrictHostKeyChecking=no root@$HOST_NAME -- /usr/sbin/runuser -u ttuh /home/ttuh/setup-ttserver-pu1.sh $REM_CMD $TTSERVER_BRANCH $TTSERVER_PREFIX $TTSERVER_PORT

ssh -t -oStrictHostKeyChecking=no root@$HOST_NAME -- 'ip -f inet -o addr'
